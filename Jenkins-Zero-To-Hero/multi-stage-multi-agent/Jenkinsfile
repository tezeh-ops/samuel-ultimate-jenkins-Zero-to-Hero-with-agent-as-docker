
//we may have question that ok since we are making use of containers as Agent in our Jenkins pipeline so 
//  what if we have different appliaction written in different languages { java, Nodejs,  Some DataBase querrys that we need to do } So
//  how do we confugure a Multi-stage/ Mutti-agent  pipeline to handle this applications using Docker containers?
// As we can see below is and example on how to do that all we need is to present the container that acn host the kind of application we want to run
// 

// The Advantage of using Docker as an Agent it will save cost and time and cofigurations errors as well  Because if we were to use VM as our Agents:
// we have to make the number of Vm needed to run the Various application and scale the up and down  trying to manage cost and we have to configure them ayntime there
//  And updatae in the software BUT with Docker all we need is just to change the Image version an everthing will good to go.
// And the container created as and agent as soon it done with the execution it will get deleted.



pipeline {
  agent none                            // we put get here as <none>
  stages {
    stage('Back-end') {
      agent {                                                     // Agent to run java app with maven
        docker { image 'maven:3.8.1-adoptopenjdk-11' }
      }
      steps {
        sh 'mvn --version'      // here we can put our mvn clean package etc 
      }
    }
    stage('Front-end') {
      agent {                          // let say we have a Nodejs application for our frontenf and we want to docker as agent we provide the Nodejs image  as well
        docker { image 'node:16-alpine' }
      }
      steps {
        sh 'node --version'   // npm command here
      }
    }
  }
}


// And we can just keep addid the agents depending on our applications 